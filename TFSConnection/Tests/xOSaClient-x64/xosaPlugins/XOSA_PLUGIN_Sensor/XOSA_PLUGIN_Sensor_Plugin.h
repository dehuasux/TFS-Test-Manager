// This is autogenerated code - 5:14 PM 3/12/2015

#ifndef SENSOR_H
#define SENSOR_H

#include "SensorApi.h"
#include <xOSa/xOSaClientApi.h>

#ifdef __cplusplus
extern "C" {
#endif

#if defined(XOSA_WINDOWS) && defined(Sensor_EXPORTS)
	#define XOSA_PLUGIN_Sensor_API __declspec(dllexport)
#elif defined(XOSA_WINDOWS) && !defined(Sensor_EXPORTS)
	#define XOSA_PLUGIN_Sensor_API __declspec(dllimport)
#else
	#define XOSA_PLUGIN_Sensor_API 
#endif


XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorRemoveStateChangeCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, STATE_CHANGE_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorRemoveNewDataCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, POLLING_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetAllProperties (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetVendor (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, char* vendor, uint32_t bufferSize, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorFreePollingData(
	//struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	//SENSOR_HANDLE handle, PollingData* data, bool freeServerMemory, SENSOR_STATUS*  returnValue);
	SENSOR_HANDLE handle, PollingData* data);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorRemoveShakeCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SHAKE_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetReportInterval (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t* interval, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetLastDataEvents (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, int numEvents, int* retEvents, PollingData* data, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorSetSensitivity (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint8_t index, double sensitivity, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetName (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, char* name, uint32_t bufferSize, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetAllInstances (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_TYPE type, SENSOR_HANDLE* handles, uint32_t* requestedNum, uint32_t* nativeErrorCode, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorAddAddedSensorCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	ADDED_SENSOR_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetMaximumRange (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorAddStateChangeCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, STATE_CHANGE_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetMinimumReportInterval (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t* minInterval, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorAddShakeCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SHAKE_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetSensitivity (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetMinimumRange (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorPoll (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t timeout, PollingData* data, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorSetReportInterval (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t interval, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorReleaseInstance (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorRemoveAddedSensorCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	ADDED_SENSOR_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetType (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SENSOR_TYPE* type, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetAccuracy (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetLastErrorSensor (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, char* error, uint32_t bufferSize, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetInstance (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_TYPE type, uint32_t index, SENSOR_HANDLE* handle, uint32_t* nativeErrorCode, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorAddNewDataCallback (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
		SENSOR_HANDLE handle, uint32_t polling_delay, uint32_t iterations, POLLING_CALLBACK cb, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetResolution (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SensorProperty* properties, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetWinRtInstance (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_TYPE type, SENSOR_HANDLE* handle, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetNumOfFlattenProperties (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t* num, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorSetMaxLatency (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, uint32_t maxLatency, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetPropertyByKey (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, char* key, SensorProperty* prop, SENSOR_STATUS*  returnValue);
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetState (
	struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, SENSOR_STATE* state, SENSOR_STATUS*  returnValue);

XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetWin10RtAvailableCustomSensors(
struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	StringData* test, uint32_t numtest, StringData* ids, uint32_t* requestedNum, SENSOR_STATUS*  returnValue);

XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetWin10RtCustomInstance(
struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	char* guid, SENSOR_HANDLE* handle, SENSOR_STATUS*  returnValue);

// Custom code - calls code in XOSA_PLUGIN_Sensor_Plugin_Additions.h
XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorGetKeyName (
	uint32_t idFather, uint32_t idSon, char* pFatherName, char* pSonName, char* pFatherKey, char* pSonKey);

XOSA_PLUGIN_Sensor_API XOSA_STATUS __cdecl XOSA_PLUGIN_SensorAddNullCallback(
struct XosaClientConnection * conn, const struct XosaClientApiCallParameters *params,
	SENSOR_HANDLE handle, char* filename , SENSOR_STATUS*  returnValue);

#ifdef __cplusplus
}
#endif

#endif